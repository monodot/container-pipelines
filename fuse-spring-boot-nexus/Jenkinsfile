openshift.withCluster() {
  env.NAMESPACE = openshift.project()
  env.POM_FILE = env.BUILD_CONTEXT_DIR ? "${env.BUILD_CONTEXT_DIR}/pom.xml" : "pom.xml"
  env.APP_NAME = "${JOB_NAME}".replaceAll(/-build.*/, '')
  echo "Starting Pipeline for ${APP_NAME}..."
  env.BUILD = "${env.NAMESPACE}"
  env.DEV = "${APP_NAME}-dev"
  env.STAGE = "${APP_NAME}-stage"
  env.PROD = "${APP_NAME}-prod"
}

pipeline {
  // Use Jenkins Maven slave
  // Jenkins will dynamically provision this as OpenShift Pod
  // All the stages and steps of this Pipeline will be executed on this Pod
  // After Pipeline completes the Pod is killed so every run will have clean
  // workspace
  agent {
    label 'maven'
  }
  
  stages {
    
    stage('Git Checkout') {
      steps {
        
      }
    }
    
    stage('Deploy OCP Objects to DEV') {
      agent {
        label 'jenkins-slave-ansible'
      }
      
      steps {
        echo 'üë∑ Create OpenShift objects using openshift-applier...'
        sh  '''
        ansible-galaxy install -r .applier/requirements.yml --roles-path=.applier/roles
        ansible-playbook -i .applier/inventory .applier/apply.yml -e filter_tags=dev
        '''
      }
    }
    
    stage('Build') {
      steps {
        echo '‚ù§Ô∏è Running Maven build...'
        sh "mvn -B clean install -DskipTests=true"
        
        echo 'üíö Running tests...'
        sh "mvn -B test"

        echo 'üíô Deploying to artifact repository...'
        sh "mvn -B deploy -DskipTests=true"
      }
    }
    
    stage('Unit Test') {
      steps {
        
      }
    }
  }
  
}

